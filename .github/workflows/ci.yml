name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        go-version: [1.21, 1.22]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-
          ${{ runner.os }}-go-
    
    - name: Download dependencies
      run: go mod download
    
    - name: Verify dependencies
      run: go mod verify
    
    - name: Run go vet
      run: go vet ./...
    
    - name: Run go fmt
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "The following files are not formatted:"
          gofmt -s -l .
          echo "Please run 'gofmt -s -w .' to format your code."
          exit 1
        fi
    
    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
  
  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.22
    
    - name: Build binary
      run: go build -v -o snippety ./cmd/snippety/main.go
    
    - name: Test binary
      run: ./snippety --version || echo "Version command not implemented yet"
  
  build-cross-platform:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.22
    
    - name: Build for multiple platforms
      run: |
        mkdir -p dist
        
        # Linux AMD64
        GOOS=linux GOARCH=amd64 go build -o dist/snippety-linux-amd64 ./cmd/snippety/main.go
        
        # Linux ARM64  
        GOOS=linux GOARCH=arm64 go build -o dist/snippety-linux-arm64 ./cmd/snippety/main.go
        
        # macOS AMD64
        GOOS=darwin GOARCH=amd64 go build -o dist/snippety-darwin-amd64 ./cmd/snippety/main.go
        
        # macOS ARM64 (M1/M2)
        GOOS=darwin GOARCH=arm64 go build -o dist/snippety-darwin-arm64 ./cmd/snippety/main.go
        
        # Windows AMD64
        GOOS=windows GOARCH=amd64 go build -o dist/snippety-windows-amd64.exe ./cmd/snippety/main.go
        
        # List built binaries
        ls -la dist/
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: cross-platform-binaries
        path: dist/